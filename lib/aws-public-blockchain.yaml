Parameters:
  S3Bucket:
    Description: The S3 bucket with the AWS Public Blockchain Data
    Type: String
    Default: "aws-public-blockchain"
  SchemaVersion:
    Type: String
    Default: "v1.0"
  SchemaVersionTON:
    Type: String
    Default: "v1.1"
Resources:
  AthenaResultsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AthenaResultsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ForceHTTPS
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub ${ AthenaResultsBucket.Arn}/*
              - !Sub ${ AthenaResultsBucket.Arn}
            Condition:
              Bool:
                "aws:SecureTransport": false
      Bucket: !Ref AthenaResultsBucket

  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: AWSPublicBlockchain
      Description: AWS Public Blockchain Data
      RecursiveDeleteOption: true
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        RequesterPaysEnabled: true
        ResultConfiguration:
          OutputLocation: !Join
            - ""
            - - s3://
              - !Ref AthenaResultsBucket
              - /results/
          EncryptionConfiguration:
            EncryptionOption: SSE_S3

  GlueDatabaseBTC:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: btc

  GlueDatabaseETH:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: eth

  GlueDatabaseTON:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: ton

  GlueTableBlocksBTC:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseBTC
      TableInput:
        Owner: owner
        Retention: 0
        Name: blocks
        StorageDescriptor:
          Columns:
            - Name: hash
              Type: string
            - Name: size
              Type: bigint
            - Name: stripped_size
              Type: bigint
            - Name: weight
              Type: bigint
            - Name: number
              Type: bigint
            - Name: version
              Type: bigint
            - Name: merkle_root
              Type: string
            - Name: timestamp
              Type: timestamp
            - Name: nonce
              Type: bigint
            - Name: bits
              Type: string
            - Name: coinbase_param
              Type: string
            - Name: transaction_count
              Type: bigint
            - Name: mediantime
              Type: timestamp
            - Name: difficulty
              Type: double
            - Name: chainwork
              Type: string
            - Name: previousblockhash
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /btc/blocks
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableTransactionsBTC:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseBTC
      TableInput:
        Owner: owner
        Retention: 0
        Name: transactions
        StorageDescriptor:
          Columns:
            - Name: hash
              Type: string
            - Name: size
              Type: bigint
            - Name: virtual_size
              Type: bigint
            - Name: version
              Type: bigint
            - Name: lock_time
              Type: bigint
            - Name: block_hash
              Type: string
            - Name: block_number
              Type: bigint
            - Name: block_timestamp
              Type: timestamp
            - Name: index
              Type: bigint
            - Name: input_count
              Type: bigint
            - Name: output_count
              Type: bigint
            - Name: input_value
              Type: double
            - Name: output_value
              Type: double
            - Name: is_coinbase
              Type: boolean
            - Name: fee
              Type: double
            - Name: inputs
              Type: array<struct<index:bigint,spent_transaction_hash:string,spent_output_index:bigint,script_asm:string,script_hex:string,sequence:bigint,required_signatures:bigint,type:string,address:string,value:double>>
            - Name: outputs
              Type: array<struct<index:bigint,script_asm:string,script_hex:string,required_signatures:bigint,type:string,address:string,value:double>>
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /btc/transactions
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableBlocksETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: blocks
        StorageDescriptor:
          Columns:
            - Name: timestamp
              Type: timestamp
            - Name: number
              Type: bigint
            - Name: hash
              Type: string
            - Name: parent_hash
              Type: string
            - Name: nonce
              Type: string
            - Name: sha3_uncles
              Type: string
            - Name: logs_bloom
              Type: string
            - Name: transactions_root
              Type: string
            - Name: state_root
              Type: string
            - Name: receipts_root
              Type: string
            - Name: miner
              Type: string
            - Name: difficulty
              Type: double
            - Name: total_difficulty
              Type: double
            - Name: size
              Type: bigint
            - Name: extra_data
              Type: string
            - Name: gas_limit
              Type: bigint
            - Name: gas_used
              Type: bigint
            - Name: transaction_count
              Type: bigint
            - Name: base_fee_per_gas
              Type: bigint
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/blocks
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableTransactionsETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: transactions
        StorageDescriptor:
          Columns:
            - Name: hash
              Type: string
            - Name: nonce
              Type: bigint
            - Name: transaction_index
              Type: bigint
            - Name: from_address
              Type: string
            - Name: to_address
              Type: string
            - Name: value
              Type: double
            - Name: gas
              Type: bigint
            - Name: gas_price
              Type: bigint
            - Name: input
              Type: string
            - Name: receipt_cumulative_gas_used
              Type: bigint
            - Name: receipt_gas_used
              Type: bigint
            - Name: receipt_contract_address
              Type: string
            - Name: receipt_root
              Type: string
            - Name: receipt_status
              Type: bigint
            - Name: block_timestamp
              Type: timestamp
            - Name: block_number
              Type: bigint
            - Name: block_hash
              Type: string
            - Name: max_fee_per_gas
              Type: bigint
            - Name: max_priority_fee_per_gas
              Type: bigint
            - Name: transaction_type
              Type: bigint
            - Name: receipt_effective_gas_price
              Type: bigint
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/transactions
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableTokenTransfersETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: token_transfers
        StorageDescriptor:
          Columns:
            - Name: token_address
              Type: string
            - Name: from_address
              Type: string
            - Name: to_address
              Type: string
            - Name: value
              Type: double
            - Name: transaction_hash
              Type: string
            - Name: log_index
              Type: bigint
            - Name: block_timestamp
              Type: timestamp
            - Name: block_number
              Type: bigint
            - Name: block_hash
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/token_transfers
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableLogsETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: logs
        StorageDescriptor:
          Columns:
            - Name: log_index
              Type: bigint
            - Name: transaction_hash
              Type: string
            - Name: transaction_index
              Type: bigint
            - Name: address
              Type: string
            - Name: data
              Type: string
            - Name: topics
              Type: array<string>
            - Name: block_timestamp
              Type: timestamp
            - Name: block_number
              Type: bigint
            - Name: block_hash
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/logs
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableTracesETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: traces
        StorageDescriptor:
          Columns:
            - Name: transaction_hash
              Type: string
            - Name: transaction_index
              Type: bigint
            - Name: from_address
              Type: string
            - Name: to_address
              Type: string
            - Name: value
              Type: double
            - Name: input
              Type: string
            - Name: output
              Type: string
            - Name: trace_type
              Type: string
            - Name: call_type
              Type: string
            - Name: reward_type
              Type: string
            - Name: gas
              Type: double
            - Name: gas_used
              Type: double
            - Name: subtraces
              Type: bigint
            - Name: trace_address
              Type: string
            - Name: error
              Type: string
            - Name: status
              Type: bigint
            - Name: block_timestamp
              Type: timestamp
            - Name: block_number
              Type: bigint
            - Name: block_hash
              Type: string
            - Name: trace_id
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/traces
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableContractsETH:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseETH
      TableInput:
        Owner: owner
        Retention: 0
        Name: contracts
        StorageDescriptor:
          Columns:
            - Name: address
              Type: string
            - Name: bytecode
              Type: string
            - Name: block_timestamp
              Type: timestamp
            - Name: block_number
              Type: bigint
            - Name: block_hash
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersion
              - /eth/contracts
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableBlocksTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: blocks
        StorageDescriptor:
          Columns:
            - Name: workchain
              Type: int
            - Name: shard
              Type: bigint
            - Name: seqno
              Type: int
            - Name: root_hash
              Type: string
            - Name: file_hash
              Type: string
            - Name: mc_block_workchain
              Type: int
            - Name: mc_block_shard
              Type: bigint
            - Name: mc_block_seqno
              Type: int
            - Name: gen_utime
              Type: int
            - Name: created_by
              Type: string
            - Name: tx_count
              Type: int
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/blocks
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableTransactionsTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: transactions
        StorageDescriptor:
          Columns:
            - Name: account
              Type: string
            - Name: hash
              Type: string
            - Name: lt
              Type: bigint
            - Name: block_workchain
              Type: int
            - Name: block_shard
              Type: int
            - Name: block_seqno
              Type: int
            - Name: mc_block_seqno
              Type: int
            - Name: trace_id
              Type: string
            - Name: now
              Type: int
            - Name: orig_status
              Type: string
            - Name: end_status
              Type: string
            - Name: total_fees
              Type: bigint
            - Name: aborted
              Type: boolean
            - Name: is_tock
              Type: boolean
            - Name: compute_exit_code
              Type: int
            - Name: action_result_code
              Type: int
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/transactions
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableMessagesTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: messages
        StorageDescriptor:
          Columns:
            - Name: tx_hash
              Type: string
            - Name: tx_lt
              Type: bigint
            - Name: tx_now
              Type: int
            - Name: msg_hash
              Type: string
            - Name: direction
              Type: string
            - Name: trace_id
              Type: string
            - Name: source
              Type: string
            - Name: destination
              Type: string
            - Name: value
              Type: bigint
            - Name: fwd_fee
              Type: bigint
            - Name: opcode
              Type: int
            - Name: comment
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/messages
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableJettonEventsTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: jetton_events
        StorageDescriptor:
          Columns:
            - Name: type
              Type: string
            - Name: tx_hash
              Type: string
            - Name: tx_lt
              Type: bigint
            - Name: utime
              Type: int
            - Name: trace_id
              Type: string
            - Name: tx_aborted
              Type: boolean
            - Name: amount
              Type: decimal(38,0) 
            - Name: source
              Type: string
            - Name: destination
              Type: string
            - Name: jetton_master
              Type: string
            - Name: comment
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/jetton_events
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableJettonMetadataTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: jetton_metadata
        StorageDescriptor:
          Columns:
            - Name: address
              Type: string
            - Name: admin_address
              Type: string
            - Name: symbol
              Type: string
            - Name: name
              Type: string
            - Name: description
              Type: string
            - Name: decimals
              Type: int
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/jetton_metadata
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableNFTEventsTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: nft_events
        StorageDescriptor:
          Columns:
            - Name: type
              Type: string
            - Name: nft_item_address
              Type: string
            - Name: collection_address
              Type: string
            - Name: owner_address
              Type: string
            - Name: content_onchain
              Type: string
            - Name: timestamp
              Type: int
            - Name: tx_hash
              Type: string
            - Name: trace_id
              Type: string
            - Name: prev_owner
              Type: string
            - Name: comment
              Type: string
            - Name: sale_type
              Type: string
            - Name: marketplace_address
              Type: string
            - Name: sale_price
              Type: decimal(38,0)
            - Name: marketplace_fee
              Type: decimal(38,0)
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/nft_events
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableNFTMetadataTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: nft_metadata
        StorageDescriptor:
          Columns:
            - Name: type
              Type: string
            - Name: address
              Type: string
            - Name: name
              Type: string
            - Name: description
              Type: string
            - Name: image
              Type: string
            - Name: attributes
              Type: string
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/nft_metadata
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  GlueTableDEXTradesTON:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseTON
      TableInput:
        Owner: owner
        Retention: 0
        Name: dex_trades
        StorageDescriptor:
          Columns:
            - Name: tx_hash
              Type: string
            - Name: trace_id
              Type: string
            - Name: project_type
              Type: string
            - Name: project
              Type: string
            - Name: event_time
              Type: int
            - Name: event_type
              Type: string
            - Name: trader_address
              Type: string
            - Name: pool_address
              Type: string
            - Name: token_sold_address
              Type: string
            - Name: token_bought_address
              Type: string
            - Name: amount_sold_raw
              Type: decimal(38,0)
            - Name: amount_bought_raw
              Type: decimal(38,0)
            - Name: volume_usd
              Type: decimal(20,6)
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          Location: !Join
            - ""
            - - s3://
              - !Ref S3Bucket
              - /
              - !Ref SchemaVersionTON
              - /ton/dex_trades
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: date
            Type: string
        TableType: EXTERNAL_TABLE

  LambdaAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Glue
            Effect: Allow
            Action:
              - glue:GetTable
              - glue:GetPartitions
              - glue:BatchCreatePartition
              - glue:BatchDeletePartition
            Resource:
              - arn:aws:glue:*:*:catalog
              - arn:aws:glue:*:*:database/btc
              - arn:aws:glue:*:*:database/eth
              - arn:aws:glue:*:*:database/ton
              - arn:aws:glue:*:*:table/btc/*
              - arn:aws:glue:*:*:table/eth/*
              - arn:aws:glue:*:*:table/ton/*
          - Sid: SSM
            Effect: Allow
            Action: ssm:GetParameter
            Resource:
              - arn:aws:ssm:*:*:parameter/public-blockchain-bucket
              - arn:aws:ssm:*:*:parameter/public-blockchain-schema-version
              - arn:aws:ssm:*:*:parameter/public-blockchain-schema-version-ton
          - Sid: S3
            Effect: Allow
            Action: s3:ListBucket
            Resource:
              - !Sub
                - arn:aws:s3:::${S3Bucket}
                - S3Bucket: !Ref "S3Bucket"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref LambdaAccessPolicy
      Path: /

  LambdaInvokerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Path: /

  BucketNameParamater:
    Type: AWS::SSM::Parameter
    Properties:
      Description: AWS Public Blockchain S3 bucket
      Name: public-blockchain-bucket
      Type: String
      Value: !Ref S3Bucket

  SchemaVersionParamater:
    Type: AWS::SSM::Parameter
    Properties:
      Description: AWS Public Blockchain Schema Version
      Name: public-blockchain-schema-version
      Type: String
      Value: !Ref SchemaVersion

  SchemaVersionParamaterTON:
    Type: AWS::SSM::Parameter
    Properties:
      Description: AWS Public Blockchain Schema Version
      Name: public-blockchain-schema-version-ton
      Type: String
      Value: !Ref SchemaVersionTON


  LambdaSyncPartitions:
    Type: AWS::Lambda::Function
    DependsOn:
      - GlueTableBlocksBTC
      - GlueTableTransactionsBTC
      - GlueTableBlocksETH
      - GlueTableTransactionsETH
      - GlueTableLogsETH
      - GlueTableContractsETH
      - GlueTableTracesETH
      - GlueTableTokenTransfersETH
      - GlueTableBlocksTON
      - GlueTableTransactionsTON
      - GlueTableMessagesTON
      - GlueTableJettonEventsTON
      - GlueTableJettonMetadataTON
      - GlueTableNFTEventsTON
      - GlueTableNFTMetadataTON
      - GlueTableDEXTradesTON
      - BucketNameParamater
      - SchemaVersionParamater
    Properties:
      FunctionName: aws-public-blockchain-sync
      Description: "Sync Partitions"
      Code:
        ZipFile: !Sub |
          import copy
          import datetime
          import os
          import sys

          import boto3

          glue_client = boto3.client("glue")
          s3_client = boto3.client('s3')
          ssm = boto3.client('ssm')

          parameter = ssm.get_parameter(Name='public-blockchain-bucket', WithDecryption=True)
          S3_BUCKET = parameter['Parameter']['Value']
          parameter = ssm.get_parameter(Name='public-blockchain-schema-version', WithDecryption=True)
          SCHEMA_VERSION = parameter['Parameter']['Value']

          parameter = ssm.get_parameter(Name='public-blockchain-schema-version-ton', WithDecryption=True)
          SCHEMA_VERSION_TON = parameter['Parameter']['Value']

          flag = False

          d = datetime.date.today()
          dStr = '%s-%02d-%02d' % (d.year, d.month, d.day)
          print('dStr=%s' % dStr)

          def processPrefix(PREFIX, DATABASE_NAME, TABLE_NAME, existingPartList):
              print('processPrefix:%s' % PREFIX)
              fStart = PREFIX.replace('/', '-')
              # get folders
              folders = []
              paginator = s3_client.get_paginator('list_objects_v2')
              pages = paginator.paginate(Bucket=S3_BUCKET, Prefix=PREFIX)
              for page in pages:
                  if 'Contents' in page:
                      for object in page['Contents']:
                          pref = object['Key']
                          x = '/'.join(pref.split('/')[:-1])+'/'
                          if x not in folders:
                              folders.append(x)
              
              todayFolder=PREFIX+"date="+dStr+'/'
              if todayFolder not in folders:
                  folders.append(todayFolder)

              partList = []
              # process folders
              for x in folders:
                  pList = x.split('/')
                  dStr1 = (pList[3].split('=')[1]).split('-')
                  yearStr = dStr1[0]
                  monthStr = dStr1[1]
                  dayStr = dStr1[2]
                  folderDate = yearStr+'-'+monthStr+'-'+dayStr
                  if folderDate not in existingPartList:
                      partList.append(folderDate)

              print("new partitions:%s" % len(partList))
              try:
                  get_table_response = glue_client.get_table(
                      DatabaseName=DATABASE_NAME,
                      Name=TABLE_NAME
                  )

                  # Extract the existing storage descriptor and Create custom storage descriptor with new partition location
                  storage_descriptor = get_table_response['Table']['StorageDescriptor']

                  partList2 = []
                  for x in partList:
                      custom_storage_descriptor = copy.deepcopy(storage_descriptor)
                      custom_storage_descriptor['Location'] = storage_descriptor['Location'] + "/date=" + "/".join([x]) + '/'
                      # print(custom_storage_descriptor['Location'])
                      partList2.append({
                          'Values': [x],
                          'StorageDescriptor': custom_storage_descriptor
                      })
                      if len(partList2) == 100:
                          # Create new Glue partition in the Glue Data Catalog
                          create_partition_response = glue_client.batch_create_partition(
                              DatabaseName=DATABASE_NAME,
                              TableName=TABLE_NAME,
                              PartitionInputList=partList2
                          )
                          print(create_partition_response)
                          partList2 = []
                  if len(partList2) > 0:
                      # Create new Glue partition in the Glue Data Catalog
                      create_partition_response = glue_client.batch_create_partition(
                          DatabaseName=DATABASE_NAME,
                          TableName=TABLE_NAME,
                          PartitionInputList=partList2
                      )
                      print(create_partition_response)

              except Exception as e:
                  # Handle exception as per your business requirements
                  print(e)

          def delete_partitions(database, table, partitions, batch=25):
              for i in range(0, len(partitions), batch):
                  to_delete = [{k: v[k]} for k, v in zip(["Values"]*batch, partitions[i:i+batch])]
                  glue_client.batch_delete_partition(
                      DatabaseName=database,
                      TableName=table,
                      PartitionsToDelete=to_delete)

          def get_and_delete_partitions(database, table0, deleteFirst, SCHEMA_VERSION=SCHEMA_VERSION):
              table = table0

              paginator = glue_client.get_paginator('get_partitions')
              itr = paginator.paginate(DatabaseName=database, TableName=table)

              partList = []

              for page in itr:
                  if deleteFirst:
                      delete_partitions(database, table, page["Partitions"])
                  else:
                      for x in page["Partitions"]:
                          partList.append(x['Values'][0])

              partList.sort()
              processPrefix(SCHEMA_VERSION+'/'+database+'/'+table0+'/', database, table, partList)

          def handler(event, context):
              print('sync:event:%s' % event)
              get_and_delete_partitions('btc', 'blocks', flag)
              get_and_delete_partitions('btc', 'transactions', flag)

              get_and_delete_partitions('eth', 'blocks', flag)
              get_and_delete_partitions('eth', 'transactions', flag)
              get_and_delete_partitions('eth', 'token_transfers', flag)
              get_and_delete_partitions('eth', 'traces', flag)
              get_and_delete_partitions('eth', 'contracts', flag)
              get_and_delete_partitions('eth', 'logs', flag)

              get_and_delete_partitions('ton', 'blocks', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'transactions', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'messages', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'jetton_events', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'jetton_metadata', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'nft_events', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'nft_metadata', flag, SCHEMA_VERSION_TON)
              get_and_delete_partitions('ton', 'dex_trades', flag, SCHEMA_VERSION_TON)
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      Timeout: 900



  LambdaInvoker:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaSyncPartitions
    Properties:
      FunctionName: aws-public-blockchain-cfn-wrapper
      Description: "Lambda invoke wrapper for Custom CFN actions"
      Code:
        ZipFile: !Sub |
          import boto3, json
          import cfnresponse

          def handler(event, context):
              print('EVENT:')
              print(event)

              if event['RequestType'] == "Create":
                lambda_client = boto3.client('lambda')
                
                cfn_event = {
                  "init" : "true"
                }

                lambda_client.invoke(
                    FunctionName='aws-public-blockchain-sync',
                    InvocationType='Event',
                    Payload=json.dumps(cfn_event)
                )

              responseValue = 120
              responseData = {}
              responseData['Data'] = responseValue
              cfnresponse.send(event, context, cfnresponse.SUCCESS, 
                responseData, 'aws-public-blockchain-sync-id')

      Handler: index.handler
      Role: !GetAtt LambdaInvokerExecutionRole.Arn
      Runtime: python3.9
      Timeout: 900

  LambdaCustomResource:
    Type: AWS::CloudFormation::CustomResource
    DependsOn: LambdaInvoker
    Properties:
      ServiceToken: !GetAtt LambdaInvoker.Arn

  CronjobsScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Scheduled Rule
      ScheduleExpression: cron(0 0 ? * * *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaSyncPartitions.Arn
          Id: TargetFunctionV1

  PermissionForEventsToInvokeCronjobsFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaSyncPartitions
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CronjobsScheduledRule.Arn

Outputs:
  AthenaResultsBucket:
    Description: "The name of the S3 bucket used for Athena results"
    Value: !Ref AthenaResultsBucket
    Export:
      Name: "public-blockchain-athena-results"